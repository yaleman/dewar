""" models for the sqlalchemy implementation of dewar.metadata """

from loguru import logger

from sqlalchemy import Column, ForeignKey, Integer, String, Text, Boolean
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import relationship

try:
    from config import TABLE_PREFIX
except ImportError:
    logger.info("TABLE_PREFIX not set in config, using default of 'dewar_'")
    TABLE_PREFIX = 'dewar_'

Base = declarative_base()

class File(Base): #pylint: disable=too-few-public-methods
    """ file metadata model """
    __tablename__ = f"{TABLE_PREFIX}file"
    filehash = Column(String(36), primary_key=True)
    size = Column(Integer, nullable=True)
    known_good = Column(Boolean, default=False, nullable=False)
    filetype = Column(String(50), nullable=True)

class Job(Base): #pylint: disable=too-few-public-methods
    """ job metadata model """
    __tablename__ = f"{TABLE_PREFIX}job"

    # generated by dewar.utilities.generate_job_id
    guid = Column(String(36), primary_key=True)
    timestamp = Column(Integer)
    name = Column(String(255), nullable=False)
    notes = Column(Text, nullable=True)
    known_good = Column(Boolean, default=False)

class JobFile(Base): #pylint: disable=too-few-public-methods
    """ jobfile metadata model """
    __tablename__ = f"{TABLE_PREFIX}jobfile"

    # generated by dewar.utilities.generate_job_id
    id = Column(Integer, primary_key=True)
    job_guid = Column(String(36), ForeignKey(f"{TABLE_PREFIX}job.guid"))
    job = relationship(Job)
    relative_path = Column(String(255), nullable=False)
