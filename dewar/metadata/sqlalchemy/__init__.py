""" sqlalchemy-based class for storage backend """

from sqlalchemy import Column, ForeignKey, Integer, String, Text, Boolean
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import relationship
from sqlalchemy import create_engine

class MetadataStore():
    """ base class for the metadata store """
    def __init__(self, **kwargs):
        self.table_prefix = kwargs.get('table_prefix', 'dewar_')
        self.engine = create_engine(kwargs.get('connection_string', 'sqlite:///dewar.sqlite'))
        Base.metadata.create_all(engine)

    Base = declarative_base()

    class File(Base):
        __tablename__ = f"{self.table_prefix}file"
        filehash = Column(String(36), primary_key=True)
        size = Column(Integer, nullable=True)

    class Job(Base):
        __tablename__ = f"{self.table_prefix}job"

        # generated by dewar.utilities.generate_job_id
        guid = Column(String(36), primary_key=True)
        timestamp = Column(Integer)
        name = Column(String(255), nullable=False)
        notes = Column(Text, nullable=True)
        known_good = Column(Boolean, default=False)


    class JobFile(Base):
        __tablename__ = f"{self.table_prefix}jobfile"

        # generated by dewar.utilities.generate_job_id
        id = Column(Integer, primary_key=True)
        job = relationship(Job)
        relative_path = Column(String(255), nullable=False)

    def get_hash(self, filehash: str):
        """ base implementation """
        raise NotImplementedError("This is the shell")

    def put_hash(self, filehash: str, **kwargs):
        """ baseÂ implementation """
        raise NotImplementedError("This is the shell")

    def put_metadata(self, metadata_type, **kwargs):
        """ generic metadata inserter - only required thing is type
            to delineate from other fields - as it is the table name """
        raise NotImplementedError("This is the shell")

    def get_metadata(self, metadata_type, **kwargs):
        """ generic metadata getter
            only required thing is metadata_type to delineate from other fields - as it is the table name

            kwargs should be search terms, beware this is likely a terrible implementation
            """
        raise NotImplementedError("This is the shell")

    # TODO: dewar.metadata.del_hash() ?
